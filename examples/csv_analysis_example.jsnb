{
  "metadata": {
    "name": "CSV Analysis Example",
    "language_info": {
      "name": "JavaScript",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "type": "html",
      "output": "<h1>CSV Analysis Example</h1>\nThis notebook demonstrates how to load a CSV file and perform data analysis, including visualization and aggregation."
    },
    {
      "type": "code",
      "code": "const Papa = require('papaparse');\nconst Chart = require('chart.js');\n\n// Load the CSV file\nfetch('path/to/your/csvfile.csv')\n  .then(response => response.text())\n  .then(csv => {\n    const data = Papa.parse(csv, { header: true }).data;\n    console.log(data);\n    // Perform data analysis and visualization here\n    createChart(data);\n  });",
      "status": "",
      "output": ""
    },
    {
      "type": "code",
      "code": "// Example visualization using Chart.js\nfunction createChart(data) {\n  const ctx = document.getElementById('myChart').getContext('2d');\n  new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: data.map(row => row['column_name']),\n      datasets: [{\n        label: 'Value',\n        data: data.map(row => row['value']),\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n}\n\n// Call createChart with the parsed data\nfetch('path/to/your/csvfile.csv')\n  .then(response => response.text())\n  .then(csv => {\n    const data = Papa.parse(csv, { header: true }).data;\n    createChart(data);\n  });",
      "status": "",
      "output": ""
    },
    {
      "type": "html",
      "output": "<canvas id='myChart' width='400' height='400'></canvas>"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": true
}